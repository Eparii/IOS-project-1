#!/bin/sh
export POSIXLY_CORRECT=yes
export LC_NUMERIC=en_US.UTF-8

print_help()
{
  echo ""
  echo "Použití: tradelog [-h|--help] [FILTR] [PŘÍKAZ] [LOG [LOG2 [...]]]"
  echo ""
  echo "PŘÍKAZ může být jeden z:"
  echo "  list-tick   - výpis seznamu vyskytujících se burzovních symbolů, tzv. \"tickerů\""
  echo "  profit      - výpis celkového zisku z uzavřených pozic"
  echo "  pos         - výpis hodnot aktuálně držených pozic, seřazených sestupně dle hodnoty"
  echo "  last-price  - výpis poslední známé ceny pro každý ticker"
  echo "  hist-ord    - výpis histogramu počtu transakcí dle tickeru"
  echo ""
  echo "FILTR může být kombinace následujících:" 
  echo "  -a DATETIME - jsou uvažovány pouze hodnoty PO tomto datu(bez tohoto data)"
  echo "              - DATETIME je ve formátu YYYY-MM-DD HH:MM:SS"
  echo "  -b DATETIME - jsou uvažovány pouze záznamy PŘED tímto datem(bez tohoto data)"
  echo "  -t TICKER   - jsou uvažovány pouze záznamy odpovídající danému tickeru."
  echo "              - při více výskytech přepínače se bere množina všech uvedených tickerů"
  echo "  -w WIDTH    - u výpisu grafů nastavuje jejich šířku, tedy délku nejdelšího řádku na WIDTH"
  echo "              - WIDTH musí být kladné celé číslo. Více výskytů přepínače je chybné spuštění"
  echo ""
}

COMMAND=""
FILTERS=""
GZFILES=""
OUTPUT=""
FILES=""
FIRST_COMMAND="TRUE"
READ_INPUT=""

while [ "$#" -gt 0 ]; do
  case "$1" in
    -h | --help)
      print_help
      exit 0
      ;;
    list-tick | profit | pos | last-price | hist-ord | graph-pos)
      if [ "$FIRST_COMMAND" = "FALSE" ]; then
        echo "Lze zadat pouze jeden příkaz!"
        exit 1
      fi
      COMMAND="$1"
      FIRST_COMMAND="FALSE"
      shift
      ;;
    -a | -b | -t | -w)
      FILTERS="$FILTERS $1 $2"
      shift
      shift
      ;;
    *.log.gz)
      if [ "$READ_INPUT" = "" ]; then
        READ_INPUT="gunzip -c $1"
      else
        READ_INPUT="$READ_INPUT | gunzip -c $1"
      fi
      if [ "$GZFILES" != "" ]; then
        GZFILES="$GZILES "
      fi
      GZFILES="$GZFILES$1"
      shift
      ;;
    *.log)
      if [ "$READ_INPUT" = "" ]; then
        READ_INPUT="cat $1"
      else
        READ_INPUT="$READ_INPUT | cat - $1"
      fi
      if [ "$FILES" != "" ];then
        FILES="$FILES "
      fi
      FILES="$FILES$1"
      shift
      ;;
    *)
      echo "neznámý argument \"$1\""
      exit 1
      ;;
  esac
done

if [ "$GZFILES" != "" ]; then
  for GZFILE in $GZFILES; do
    if [ ! -r $GZFILE ]; then
      echo "soubor $GZFILE nenalezen"
      exit 1
    fi
  done
fi

if [ "$FILES" != "" ]; then
  for FILE in $FILES; do
    if [ -r $FILE ]; then
      continue
    else
      echo "Soubor $FILE nenalezen"
      exit 1
    fi
  done
fi

if [ "$FILES" = "" ] && [ "$GZFILES" = "" ]; then
  if test -t 0; then
    echo "Nebyl zadán žádný soubor"
    exit 1
  fi
  READ_INPUT=""
fi
EDITED="$READ_INPUT"
TICKERS_FIND=""
I=1
DATE_AFTER=""
DATE_BEFORE=""

for FILTER in $FILTERS; do
I=$((I+1))
 case $FILTER in
  -t)
    VALUE=$(echo $FILTERS | cut -d ' ' -f $I)
    if [ "$TICKERS_FIND" != "" ]; then
      TICKERS_FIND="$TICKERS_FIND || \$2 == \"$VALUE\""
    else
      TICKERS_FIND="\$2 == \"$VALUE\""
    fi
    ;;
  -a)
    DATE_AFTER=$(echo $FILTERS | cut -d ' ' -f $I,$(($I+1)))
    ;;
  -b)
    DATE_BEFORE=$(echo $FILTERS | cut -d ' ' -f $I,$(($I+1)))
    ;;
 esac
done

if [ "$TICKERS_FIND" != "" ]; then
  if [ "$EDITED" != "" ]; then
    EDITED="$EDITED |"
  fi
  EDITED="$EDITED awk -F\; '$TICKERS_FIND { print \$0 }'"
fi


if [ "$DATE_AFTER" != "" ]; then
  if [ "$EDITED" != "" ]; then
    EDITED="$EDITED |"
  fi
  EDITED="$EDITED awk -F\; -v DATE_AFTER='"$DATE_AFTER"' '{ if (\$1 > DATE_AFTER) print \$0}'"        
fi


if [ "$DATE_BEFORE" != "" ]; then
  if [ "$EDITED" != "" ]; then
    EDITED="$EDITED |"
  fi   
  EDITED="$EDITED awk -F\; -v DATE_BEFORE='"$DATE_BEFORE"' '{ if (\$1 < DATE_BEFORE) print \$0}'"
fi
case $COMMAND in
  list-tick)
    if [ "$EDITED" != "" ]; then
      EDITED="$EDITED |"
    fi
    EDITED="$EDITED awk -F\; '{print \$2}' | sort -u"
    ;;
  profit)
    if [ "$EDITED" != "" ]; then
      EDITED="$EDITED |"
    fi
    EDITED="$EDITED awk -vOFMT='%.2f' -F\; -v profit=0 '{ if (\$3 == \"buy\") { profit-=\$4*\$6 } else { profit+=\$4*\$6 }} END { print profit }'"
    ;;
  pos)
    if [ "$EDITED" != "" ]; then
      EDITED="$EDITED |"
    fi
    LONGEST_LINE=0
    LONGEST_LINE=$($READ_INPUT | sort -t\; -k2,2 -k1,1 -r | awk -F\; -v j="1" '{
    {ArrayTickers[NR]=$2}
    if(ArrayTickers[NR] != ArrayTickers[NR-1])
    {
      {LAST_PRICE[j]=$4}
      {j++}
    }
    if($3 == "sell")
    {       
      ArrayHolding[NR]-=$6
    }
    else
    {
      ArrayHolding[NR]+=$6
    }
    }
    END {{j=1} for(i=1;i<=NR+1;i++)
    {
      if(ArrayTickers[i] == ArrayTickers[i-1])
      {
        ArrayHolding[i]+=ArrayHolding[i-1]
      }
      else if (i == 1) {continue}
      else
      {
        {printf "%10s;%.2f\n", ArrayTickers[i-1], ArrayHolding[i-1]*LAST_PRICE[j]}
        {j++}
      }
}}' | awk -F\; -v longest="$LONGEST_LINE" '{ if (length($2)>longest) longest=length($2)} END {print longest}')
 
    EDITED="$EDITED sort -t\; -k2,2 -k1,1 -r | awk -F\; -v j="1" -v longest="$LONGEST_LINE" '{
    {ArrayTickers[NR]=\$2}
    if(ArrayTickers[NR] != ArrayTickers[NR-1])
    {
      {LAST_PRICE[j]=\$4}
      {j++}
    }
    if(\$3 == \"sell\")
    {       
      ArrayHolding[NR]-=\$6
    }
    else
    {
      ArrayHolding[NR]+=\$6
    }
    }
    END {{j=1} for(i=1;i<=NR+1;i++)
    {
      if(ArrayTickers[i] == ArrayTickers[i-1])
      {
        ArrayHolding[i]+=ArrayHolding[i-1]
      }
      else if (i == 1) {continue}
      else
      {
        {printf \"%-10s: %*.2f\n\", ArrayTickers[i-1], longest, ArrayHolding[i-1]*LAST_PRICE[j]}
        {j++}
      }
}}'| sort -t\: -n -r -k2,2" 
    ;;
  last-price)
    if [ "$EDITED" != "" ]; then
      EDITED="$EDITED |"
    fi
    LONGEST_LINE=$($READ_INPUT | sort -t\; -k2,2 -k1,1 -r | sort -t\; -k2,2 -u | awk -F\; -v longest=0 '{ if(length($4)>longest) { longest=length($4)}} END {print longest} ')
    EDITED="$EDITED sort -t\; -k2,2 -k1,1 -r | sort -t\; -k2,2 -u | awk -F\; -v longest="$LONGEST_LINE" '{if(length(\$4)>longest) { longest=length(\$4)} printf \"%-10s: %*s\n\",\$2,longest, \$4}'"
    ;;
  hist-ord)
    if [ "$EDITED" != "" ]; then
      EDITED="$EDITED |"
    fi
    EDITED="$EDITED sort -t\; -k2,2 | awk -F \; -v SUM=1 '{
    {TICKERS[NR]=\$2}
    }
    END{
    for(i = 1; i <= NR+1; i++){        
      if(TICKERS[i] == TICKERS[i-1]) { SUM++ }
      else if (i==1) {continue}
      else
      {
        {HASHTAGS=\"#\"}
        for (j=1; j<SUM; j++)
        {
          HASHTAGS=HASHTAGS \"#\"
        }
        {printf \"%-10s: %s\n\", TICKERS[i-1], HASHTAGS}
        {SUM=1}
      }
    }}'"
    ;;
esac

if [ "$EDITED" != "" ]; then
  echo $EDITED
  eval $EDITED 
else
 while read LINE; do
  echo $LINE
 done
fi
